'use strict';const CACHE_VERSION=1;var CURRENT_CACHES={offline:'offline-v'+CACHE_VERSION};const OFFLINE_URL='/';function createCacheBustedRequest(url){var request=new Request(url,{cache:'reload'});if('cache'in request){return request;}
var bustedUrl=new URL(url,self.location.href);bustedUrl.search+=(bustedUrl.search?'&':'')+'cachebust='+Date.now();return new Request(bustedUrl);}
self.addEventListener('install',function(event){event.waitUntil(fetch(createCacheBustedRequest(OFFLINE_URL)).then(function(response){return caches.open(CURRENT_CACHES.offline).then(function(cache){return cache.put(OFFLINE_URL,response);});}));});self.addEventListener('activate',function(event){var expectedCacheNames=Object.keys(CURRENT_CACHES).map(function(key){return CURRENT_CACHES[key];});event.waitUntil(caches.keys().then(function(cacheNames){return Promise.all(cacheNames.map(function(cacheName){if(expectedCacheNames.indexOf(cacheName)===-1){console.log('Deleting out of date cache:',cacheName);return caches.delete(cacheName);}}));}));});self.addEventListener('fetch',function(event){if(event.request.mode==='navigate'||(event.request.method==='GET'&&event.request.headers.get('accept').includes('text/html'))){console.log('Handling fetch event for',event.request.url);event.respondWith(fetch(event.request).then(function(response){if(!response||response.status!==200||response.type!=='basic'){return response;}
var responseToCache=response.clone();caches.open(CURRENT_CACHES.offline).then(function(cache){cache.put(event.request,responseToCache);});return response;}).catch(function(error){console.log('Fetch failed; returning offline page instead.',error);return caches.match(event.request.url);}));}});